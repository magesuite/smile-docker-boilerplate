services:
    varnish:
        image: ${VARNISH_IMAGE}
        depends_on:
            - web
        volumes:
            - ./docker/conf/varnish/default-prod.vcl:/etc/varnish/default.vcl

    web:
        image: ${NGINX_IMAGE}
        depends_on:
            - php
        volumes:
            - appdata:/var/www/html
            - ./docker/conf/nginx/default-prod.conf:/etc/nginx/conf.d/default.conf

    php:
        image: ${PHP_FPM_IMAGE}
        depends_on:
            - db
            - elasticsearch
            - maildev
            - rabbitmq
            - redis
        volumes:
            - appdata:/var/www/html

    cron:
        image: ${PHP_FPM_IMAGE}
        command: run-cron
        environment:
            CRONTAB: '* * * * * /usr/local/bin/php /var/www/html/bin/magento cron:run >> /var/www/html/var/log/cron.log'
        depends_on:
            - db
            - elasticsearch
            - maildev
            - rabbitmq
            - redis
        profiles:
            - cron
        volumes:
            - appdata:/var/www/html

    db:
        image: ${MYSQL_IMAGE}
        env_file:
            - docker/env/db.env
        healthcheck:
            test: 'mysqladmin ping -h localhost -pmagento2'
            interval: 30s
            timeout: 30s
            retries: 3
        volumes:
            - ./docker/conf/mysql/magento.cnf:/etc/mysql/conf.d/magento.cnf
            - dbdata:/var/lib/mysql

    elasticsearch:
        image: ${ELASTICSEARCH_IMAGE}
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
        env_file:
            - docker/env/elasticsearch.env
        volumes:
            - esdata:/usr/share/elasticsearch/data

    redis:
        image: ${REDIS_IMAGE}
        healthcheck:
            test: 'redis-cli ping || exit 1'
            interval: 30s
            timeout: 30s
            retries: 3
        volumes:
            - ./docker/conf/redis/redis.conf:/usr/local/etc/redis/redis.conf

    rabbitmq:
        image: ${RABBITMQ_IMAGE}
        env_file:
            - docker/env/rabbitmq.env
        healthcheck:
            test: 'rabbitmq-diagnostics -q ping'
        volumes:
            - rabbitmqdata:/var/lib/rabbitmq

    maildev:
        image: ${MAILDEV_IMAGE}

volumes:
    appdata:
    dbdata:
    esdata:
    rabbitmqdata:
