version: '3.4'

services:
    varnish:
        labels:
            - traefik.enable=true
            # Serve magento over http
            - traefik.http.routers.${PROJECT_NAME?PROJECT_NAME must be set.}-magento-http.rule=Host(`$PROJECT_NAME.docker.localhost`)
            - traefik.http.routers.$PROJECT_NAME-magento-http.entrypoints=http
            # Serve magento over https
            - traefik.http.routers.$PROJECT_NAME-magento-https.rule=Host(`$PROJECT_NAME.docker.localhost`)
            - traefik.http.routers.$PROJECT_NAME-magento-https.entrypoints=https
            - traefik.http.routers.$PROJECT_NAME-magento-https.tls=true

    web:
        image: ${PROJECT_NAME?PROJECT_NAME must be set.}_web
        build: ./docker/images/nginx
        volumes:
            - ${MAGENTO_DIR?MAGENTO_DIR must be set.}:/var/www/html:rw,cached

    php:
        image: ${PROJECT_NAME?PROJECT_NAME must be set.}_php
        build:
            context: ./docker/images/php
            args:
                PHP_VERSION: ${PHP_VERSION?PHP_VERSION must be set.}
                COMPOSER_VERSION: ${COMPOSER_VERSION?COMPOSER_VERSION must be set.}
        user: ${DOCKER_UID?DOCKER_UID must be set.}:${DOCKER_GID?DOCKER_GID must be set.}
        environment:
            COMPOSER_AUTH: ${COMPOSER_AUTH:-}
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ${MAGENTO_DIR?MAGENTO_DIR must be set.}:/var/www/html:rw,cached
            - composer-cache:/tmp/composer
            - npm-cache:/tmp/npm

    cron:
        image: ${PROJECT_NAME?PROJECT_NAME must be set.}_cron
        build:
            context: ./docker/images/php
            args:
                PHP_VERSION: ${PHP_VERSION?PHP_VERSION must be set.}
                COMPOSER_VERSION: ${COMPOSER_VERSION?COMPOSER_VERSION must be set.}
        environment:
            DOCKER_UID: ${DOCKER_UID?DOCKER_UID must be set.}
            DOCKER_GID: ${DOCKER_GID?DOCKER_GID must be set.}
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ${MAGENTO_DIR?MAGENTO_DIR must be set.}:/var/www/html:rw,cached

    elasticsearch:
        labels:
            - traefik.enable=true
            - traefik.http.services.${PROJECT_NAME?PROJECT_NAME must be set.}-elastic.loadbalancer.server.port=9200
            # Serve elasticsearch over http
            - traefik.http.routers.$PROJECT_NAME-elastic-http.rule=Host(`elastic.$PROJECT_NAME.docker.localhost`)
            - traefik.http.routers.$PROJECT_NAME-elastic-http.entrypoints=http

    rabbitmq:
        labels:
            - traefik.enable=true
            - traefik.http.services.${PROJECT_NAME?PROJECT_NAME must be set.}-rabbitmq.loadbalancer.server.port=15672
            # Serve rabbitmq over http
            - traefik.http.routers.$PROJECT_NAME-rabbitmq-http.rule=Host(`rabbitmq.$PROJECT_NAME.docker.localhost`)
            - traefik.http.routers.$PROJECT_NAME-rabbitmq-http.entrypoints=http

    maildev:
        labels:
            - traefik.enable=true
            - traefik.http.services.${PROJECT_NAME?PROJECT_NAME must be set.}-maildev.loadbalancer.server.port=1080
            # Serve maildev over http
            - traefik.http.routers.$PROJECT_NAME-maildev-http.rule=Host(`maildev.$PROJECT_NAME.docker.localhost`)
            - traefik.http.routers.$PROJECT_NAME-maildev-http.entrypoints=http

volumes:
    composer-cache:
    npm-cache:
