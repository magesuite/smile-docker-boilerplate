#!/usr/bin/env bash

# Checks if project requirements are met.

set -e

cd "$( dirname "${BASH_SOURCE:-$0}}" )"
cd ../..

. ./docker/bin/deps/utils.sh

########
# Step 1 - Check system requirements
########

STATUS=0

# Check if Docker is installed
if command -v "docker" > /dev/null; then
    # Check if Docker Compose is installed as a plugin
    if ! docker compose > /dev/null 2>&1; then
        echo "${RED}Please install Compose as a Docker plugin (see the documentation for installation instructions).${RESET}"
        STATUS=1
    fi
else
    echo "${RED}Please install Docker, as well as the docker compose plugin (see the documentation for installation instructions).${RESET}"
    STATUS=1
fi

if [ "$STATUS" -gt 0 ]; then
    exit $STATUS
fi

########
# Step 2 - Check env file
########

if [ ! -f ".env" ]; then
    cp .env.sample .env
    echo "${GREEN}✓ Copied .env.sample to .env.${RESET}"
fi

. ./.env

########
# Step 3 - Update .env file with user id and group id
########

if [ -z "$DOCKER_UID" ] || [ "$DOCKER_UID" != "$(id -u)" ]; then
    sed -i "s/^DOCKER_UID=.*/DOCKER_UID=$(id -u)/g" .env
    echo "${GREEN}✓ Your user id was saved in .env.${RESET}"
fi

if [ -z "$DOCKER_GID" ] || [ "$DOCKER_GID" != "$(id -g)" ]; then
    sed -i "s/^DOCKER_GID=.*/DOCKER_GID=$(id -g)/g" .env
    echo "${GREEN}✓ Your group id was saved in .env.${RESET}"
fi
