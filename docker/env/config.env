# PHP/nginx container config
MAGENTO_ROOT=/var/www/html
MAGENTO_RUN_MODE=developer
PHP_ENABLE_XDEBUG=false

# MySQL container config
MYSQL_HOST=db
MYSQL_ROOT_PASSWORD=magento2
MYSQL_DATABASE=magento2
MYSQL_USER=magento2
MYSQL_PASSWORD=magento2

# RabbitMQ container config
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_DEFAULT_USER=magento
RABBITMQ_DEFAULT_PASS=magento
RABBITMQ_DEFAULT_VHOST=/
RABBITMQ_VM_MEMORY_HIGH_WATERMARK=1GB

# Magento version
EDITION=community-edition
VERSION=2.4.3
USE_SAMPLE_DATA=true
SAMPLE_DATA_VERSION=100.4.*

# Admin user
BACKEND_FRONTNAME=admin
ADMIN_FIRSTNAME=John
ADMIN_LASTNAME=Doe
ADMIN_EMAIL=john.doe@example.org
ADMIN_USER=admin
ADMIN_PASSWORD=magent0

# Settings
LANGUAGE=fr_FR
CURRENCY=EUR
BASE_URL=https://$PROJECT_NAME.docker.localhost/
SECURE_BASE_URL=https://$PROJECT_NAME.docker.localhost/
USE_REWRITES=1
USE_SECURE=1
USE_SECURE_ADMIN=1

# Search engine
ELASTICSEARCH_HOST=elasticsearch

# Redis cache
USE_REDIS_CACHE=true
REDIS_CACHE_HOST=redis
REDIS_CACHE_PORT=6379
REDIS_CACHE_DB=0

# Redis sessions
USE_REDIS_SESSIONS=true
REDIS_SESSIONS_HOST=redis
REDIS_SESSIONS_PORT=6379
REDIS_SESSIONS_LOG_LEVEL=4
REDIS_SESSIONS_DB=1

# Varnish
USE_VARNISH=true
VARNISH_BACKEND_HOST=web
VARNISH_BACKEND_PORT=80
VARNISH_ACCESS_LIST=localhost,fpm,cli
HTTP_CACHE_HOSTS=varnish:80

# RabbitMQ
USE_RABBITMQ=true

# Optional values (set a value to force a specific encryption key/cache prefix)
ENCRYPTION_KEY=
CACHE_PREFIX=
